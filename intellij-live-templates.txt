<template name="ut-2" value="test('$TEST_NAME$', () async {&#10;  $END$&#10;});&#10;" description="Create unit test" toReformat="false" toShortenFQNames="true">
  <variable name="TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="DART_STATEMENT" value="true" />
  </context>
</template>
<template name="utg" value="group('$GROUP_NAME$', () {&#10;  test('$TEST_NAME$', () async {&#10;    $END$&#10;  });&#10;});&#10;" description="Create unit test group" toReformat="false" toShortenFQNames="true">
  <variable name="GROUP_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="DART_STATEMENT" value="true" />
  </context>
</template>
<template name="utm" value="import 'package:flutter_test/flutter_test.dart';&#10;&#10;void main() {&#10;  group('$GROUP_NAME$', () {&#10;    test('$TEST_NAME$', () async {&#10;      $END$&#10;    });&#10;  });&#10;}&#10;" description="Create unit test main()" toReformat="false" toShortenFQNames="true">
  <variable name="GROUP_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="DART_TOPLEVEL" value="true" />
  </context>
</template>
<template name="wt" value="testWidgets('$TEST_NAME$', (t) async {&#10;    await tester.pumpWidget($WIDGET_CLASS$($PARAMETERS$))&#10;});&#10;" description="Create widget test" toReformat="false" toShortenFQNames="true">
  <variable name="TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="WIDGET_CLASS" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="PARAMETERS" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="DART_STATEMENT" value="true" />
  </context>
</template>
<template name="wtg" value="group('$GROUP_NAME$', () {&#10;  testWidgets('$TEST_NAME$', (t) async {&#10;    await tester.pumpWidget($WIDGET_NAME$($PARAMETERS$));&#10;    &#10;    $END$&#10;  });&#10;});&#10;" description="Create widget test group" toReformat="false" toShortenFQNames="true">
  <variable name="GROUP_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="WIDGET_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="PARAMETERS" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="DART_STATEMENT" value="true" />
  </context>
</template>
<template name="wtm" value="import 'package:flutter_test/flutter_test.dart';&#10;&#10;void main() {&#10;  group('$GROUP_NAME$', () {&#10;    testWidgets('$TEST_NAME$', (t) async {&#10;      await tester.pumpWidget($WIDGET_NAME$($PARAMETERS$));&#10;      &#10;      $END$&#10;    });&#10;  });&#10;}&#10;" description="Create widget test main()" toReformat="false" toShortenFQNames="true">
  <variable name="GROUP_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="WIDGET_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="PARAMETERS" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="DART_TOPLEVEL" value="true" />
  </context>
</template>
<template name="freezed" value="import 'package:freezed_annotation/freezed_annotation.dart';&#10;import 'package:flutter/foundation.dart';&#10;&#10;part '$BASE_NAME$.freezed.dart';&#10;&#10;@freezed&#10;abstract class $CLASS_NAME$ with _$$$CLASS_NAME$ {&#10;  const $CLASS_NAME$._();&#10;  &#10;  const factory $CLASS_NAME$({&#10;    required $END$,&#10;  }) = _$CLASS_NAME$;&#10;}&#10;" description="Freezed entity class" toReformat="false" toShortenFQNames="true">
  <variable name="BASE_NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
  <variable name="CLASS_NAME" expression="capitalize(underscoresToCamelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="false" />
  <context>
    <option name="DART_TOPLEVEL" value="true" />
  </context>
</template>
<template name="freezedJson" value="import 'package:freezed_annotation/freezed_annotation.dart';&#10;import 'package:flutter/foundation.dart';&#10;&#10;part '$BASE_NAME$.freezed.dart';&#10;part '$BASE_NAME$.g.dart';&#10;&#10;@freezed&#10;abstract class $CLASS_NAME$ with _$$$CLASS_NAME$ {&#10;  const $CLASS_NAME$._();&#10;  &#10;  const factory $CLASS_NAME$({&#10;    required $END$,&#10;  }) = _$CLASS_NAME$;&#10;&#10;  factory $CLASS_NAME$.fromJson(Map&lt;String, Object?&gt; json) =&gt;&#10;      _$$$CLASS_NAME$FromJson(json);&#10;}&#10;" description="Freezed entity class with Json serialization" toReformat="false" toShortenFQNames="true">
  <variable name="BASE_NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
  <variable name="CLASS_NAME" expression="capitalize(underscoresToCamelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="false" />
  <context>
    <option name="DART_TOPLEVEL" value="true" />
  </context>
</template>
<template name="mock" value="class Mock$INTERFACE_NAME$ extends Mock implements $INTERFACE_NAME$ {}" description="Declare a Mock class" toReformat="false" toShortenFQNames="true">
  <variable name="INTERFACE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="DART_TOPLEVEL" value="true" />
  </context>
</template>
<template name="sf" value="class $NAME$ extends StatefulWidget {&#10;  $NAME$() : super(key: Key('$KEY$'));&#10;&#10;  $FIELDS$&#10;&#10;  @override&#10;  State&lt;$NAME$&gt; createState() =&gt; $SNAME$();&#10;}&#10;&#10;class $SNAME$ extends State&lt;$NAME$&gt; {&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return $END$;&#10;  }&#10;}&#10;" description="New Stateful widget" toReformat="false" toShortenFQNames="true">
  <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="KEY" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="FIELDS" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="SNAME" expression="regularExpression(concat(&quot;_&quot;, NAME, &quot;State&quot;), &quot;^__&quot;, &quot;_&quot;)" defaultValue="" alwaysStopAt="false" />
  <context>
    <option name="DART_TOPLEVEL" value="true" />
  </context>
</template>
<template name="sl" value="class $NAME$ extends StatelessWidget {&#10;  $NAME$() : super(key: Key('$KEY$'));&#10;&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return $END$;&#10;  }&#10;}&#10;" description="New Stateless widget" toReformat="false" toShortenFQNames="true">
  <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <variable name="KEY" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="DART_TOPLEVEL" value="true" />
  </context>
</template>
<template name="tas" value="await t.tap(find.byKey(Key('$KEY_NAME$')));&#10;await t.pumpAndSettle();&#10;$END$" description="Tap and settle" toReformat="false" toShortenFQNames="true">
  <variable name="KEY_NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="DART_STATEMENT" value="true" />
  </context>
</template>
