# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  before_all do
    if ENV['APP_STORE_CONNECT_PRIVATE_KEY']
      # CI
      app_store_connect_api_key(
        key_id: ENV['APP_STORE_CONNECT_KEY_IDENTIFIER'],
        issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
        key_content: ENV['APP_STORE_CONNECT_PRIVATE_KEY']
      )
    else
      # Dev workstation
      ENV['FASTLANE_PASSWORD'] = File.read(ENV['ITUNES_PASSWORD_PATH'])
      ENV['SENTRY_AUTH_TOKEN'] = File.read(ENV['SENTRY_CI_TOKEN_PATH'])
      app_store_connect_api_key(
        key_id: ENV['APP_STORE_CONNECT_KEY_IDENTIFIER'],
        issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
        key_filepath: ENV['APP_STORE_CONNECT_PRIVATE_KEY_PATH']
      )
    end
  end

  lane :create do
    produce(
      company_name: ENV['APP_STORE_COMPANY_NAME'],
      app_name: ENV['APP_NAME_DISPLAY'],
      language: ENV['PRIMARY_APP_LANGUAGE'],
      sku: ENV['APP_TIMESTAMP'],
      app_version: '1.0', # default one, don't mess with it: https://github.com/fastlane/fastlane/issues/18794
    )
    upload_app_privacy_details_to_app_store(
      json_path: "fastlane/initial_app_privacy.json"
    )
  end

  lane :deploy_meta do
    Dir.chdir("../..") do
      sh "flutter test --update-goldens --tags=screenshots-ios"
    end
    deliver(skip_binary_upload: true)
  end

  lane :build do
    keychain_password = SecureRandom.hex(16)
    create_keychain(
      name: "tmp_keychain",
      password: keychain_password,
      default_keychain: true,
      unlock: true,
      timeout: 3600,
    )
    cert(
      keychain_name: "tmp_keychain",
      keychain_password: keychain_password
    )
    sigh

    # Play store supports versionCode values only up to 2100000000
    # https://support.google.com/googleplay/android-developer/answer/9859152?hl=en#zippy=%2Capp-version-requirements-for-play-console
    year_offset = Time.now.year - 2020
    build_number = "#{year_offset}#{Time.now.strftime('%m%d%H%M')}"
    ENV['BUILD_NUMBER'] = build_number
    ENV['SENTRY_DIST'] = "ios-#{build_number}"

    Dir.chdir("../..") do
      sh 'flutter clean'
      sh 'flutter pub get'
      sh 'flutter analyze'
      sh 'flutter test -x screenshots'
      sh <<~COMMAND
        shorebird release ios 
          --split-debug-info=build/app/outputs/symbols
          --build-name=#{build_number}
          --dart-define=SENTRY_DIST=#{ENV['SENTRY_DIST']}
      COMMAND
    end
  end

  lane :beta do
    build
    deploy_meta
    pilot(
      # submission control
      skip_submission: true,
      submit_beta_review: false,
      # tester details
      first_name: ENV['DEV_FIRST_NAME'],
      last_name: ENV['DEV_LAST_NAME'],
      email: ENV['DEV_EMAIL'],
      groups: ['default'],
      # beta review details
      beta_app_review_info: {
        contact_email: ENV['DEV_EMAIL'],
        contact_first_name: ENV['DEV_FIRST_NAME'],
        contact_last_name: ENV['DEV_LAST_NAME'],
        contact_phone: ENV['DEV_PHONE'],
        # demo_account_name: "demo@email.com",
        # demo_account_password: "connectapi",
        notes: "Thank you for reviewing my application. Have a great day!"
      },
      build_number: ENV['BUILD_NUMBER'],
    )
    Dir.chdir("../..") do
      sh "dart run sentry_dart_plugin"
      # or sh "flutter packages pub run sentry_dart_plugin"
    end
  end

  # lane :deploy_appstore do
  # end

end
